#include<iostream>
#include<stdio.h>
#include<climits>
using namespace std;
class StackUsingArray{
    int *data;
    int nextIndex;
    int capacity;
    public:
    StackUsingArray(int totalSize){
        data=new int[totalSize];
        nextIndex=0;
        capacity = totalSize;
    }
    int size(){
        return nextIndex;
    }
    bool isEmpty(){
        return nextIndex==0;
    }
    void push(int element){
        data[nextIndex]=element;
        nextIndex++;
    }
    int pop(){
        if(isEmpty()){
            cout<<"stack is empty"<<endl;
            return INT_MIN;
        }
        nextIndex--;
        return data[nextIndex];
    }
    int top(){
        if(isEmpty()){
            cout<<"stack is empty"<<endl;
            return -1;
        }
        return data[nextIndex -1];
    }
};
int main(){
    StackUsingArray s(4);
        cout<<"current size of the stack "<<s.size();
        cout<<endl;
    cout<<"condition for stack empty "<<s.isEmpty();
    cout<<endl;
    s.push(10);
    s.push(11);
    s.push(12);
     cout<<"current size of the stack"<<s.size();
        cout<<endl;
        s.pop();
        s.pop();
        cout<<s.top();
        cout<<endl;
        cout<<s.size();
}
